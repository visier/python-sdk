# coding: utf-8

"""
    Visier Data Out APIs

    Visier APIs for getting data out of Visier, such as aggregate data and data version information.

    The version of the OpenAPI document: 22222222.99201.1456
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from visier.sdk.api.data_out.models.sql_like_query_execution_dto import SqlLikeQueryExecutionDTO

class TestSqlLikeQueryExecutionDTO(unittest.TestCase):
    """SqlLikeQueryExecutionDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SqlLikeQueryExecutionDTO:
        """Test SqlLikeQueryExecutionDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SqlLikeQueryExecutionDTO`
        """
        model = SqlLikeQueryExecutionDTO()
        if include_optional:
            return SqlLikeQueryExecutionDTO(
                query = '',
                options = visier.sdk.api.data_out.models.query_execution_options_dto.QueryExecutionOptionsDTO(
                    calendar_type = 'TENANT_CALENDAR', 
                    currency_conversion_mode = 'TENANT_CURRENCY_CONVERSION', 
                    currency_conversion_date = '', 
                    lineage_depth = 56, 
                    zero_visibility = 'SHOW', 
                    null_visibility = 'SHOW', 
                    cell_distribution_options = visier.sdk.api.data_out.models.cell_distribution_options_dto.CellDistributionOptionsDTO(
                        bin_count = 56, ), 
                    axis_visibility = 'SIMPLE', 
                    enable_sparse_results = True, 
                    internal = visier.sdk.api.data_out.models.internal_query_execution_options_dto.InternalQueryExecutionOptionsDTO(
                        sparse_handling_mode = 'ALLOW', 
                        align_time_axis_to_period_end = True, ), 
                    enable_descending_space = True, 
                    currency_conversion_code = '', 
                    member_display_mode = 'DEFAULT', )
            )
        else:
            return SqlLikeQueryExecutionDTO(
        )
        """

    def testSqlLikeQueryExecutionDTO(self):
        """Test SqlLikeQueryExecutionDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
