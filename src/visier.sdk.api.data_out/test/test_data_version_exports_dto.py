# coding: utf-8

"""
    Visier Data Out APIs

    Visier APIs for getting data out of Visier, such as aggregate data and data version information.

    The version of the OpenAPI document: 22222222.99201.1429
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from visier.sdk.api.data_out.models.data_version_exports_dto import DataVersionExportsDTO

class TestDataVersionExportsDTO(unittest.TestCase):
    """DataVersionExportsDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DataVersionExportsDTO:
        """Test DataVersionExportsDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DataVersionExportsDTO`
        """
        model = DataVersionExportsDTO()
        if include_optional:
            return DataVersionExportsDTO(
                data_version_exports = [
                    visier.sdk.api.data_out.models.data_version_export_dto.DataVersionExportDTO(
                        base_data_version_number = '', 
                        data_version_number = '', 
                        deleted_tables = [
                            ''
                            ], 
                        new_tables = [
                            ''
                            ], 
                        tables = [
                            visier.sdk.api.data_out.models.data_version_export_table_dto.DataVersionExportTableDTO(
                                common_columns = null, 
                                deleted_columns = [
                                    ''
                                    ], 
                                name = '', 
                                new_columns = null, )
                            ], 
                        timestamp = '', 
                        uuid = '', )
                    ]
            )
        else:
            return DataVersionExportsDTO(
        )
        """

    def testDataVersionExportsDTO(self):
        """Test DataVersionExportsDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
