# coding: utf-8

"""
    Visier Data Out APIs

    Visier APIs for getting data out of Visier, such as aggregate data and data version information.

    The version of the OpenAPI document: 22222222.99201.1456
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from visier.sdk.api.data_out.models.vee_response_dto import VeeResponseDTO

class TestVeeResponseDTO(unittest.TestCase):
    """VeeResponseDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VeeResponseDTO:
        """Test VeeResponseDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VeeResponseDTO`
        """
        model = VeeResponseDTO()
        if include_optional:
            return VeeResponseDTO(
                conversation_state = visier.sdk.api.data_out.models.vee_conversation_state_dto.VeeConversationStateDTO(
                    question_state = [
                        ''
                        ], ),
                status_code = visier.sdk.api.data_out.models.vee_status_code_dto.VeeStatusCodeDTO(
                    status_code = 'UNDEFINED', 
                    status_msg = '', ),
                narrative = '',
                chart_url = '',
                var_schema = visier.sdk.api.data_out.models.vee_response_schema_dto.VeeResponseSchemaDTO(
                    metrics = [
                        ''
                        ], 
                    dimensions = [
                        visier.sdk.api.data_out.models.vee_response_schema_reference_dto.VeeResponseSchemaReferenceDTO(
                            name = '', 
                            paths = [
                                ''
                                ], )
                        ], 
                    concepts = [
                        visier.sdk.api.data_out.models.vee_response_schema_reference_dto.VeeResponseSchemaReferenceDTO(
                            name = '', )
                        ], ),
                corrections = [
                    visier.sdk.api.data_out.models.vee_corrections_dto.VeeCorrectionsDTO(
                        warning = [
                            'VEE_NO_WARNING'
                            ], 
                        clarifications = [
                            visier.sdk.api.data_out.models.vee_clarification_dto.VeeClarificationDTO(
                                message = '', 
                                questions = [
                                    ''
                                    ], 
                                metrics = [
                                    ''
                                    ], 
                                dimensions = [
                                    ''
                                    ], 
                                filters = [
                                    ''
                                    ], 
                                attributes = [
                                    ''
                                    ], )
                            ], )
                    ],
                data = visier.sdk.api.data_out.models.vee_data_dto.VeeDataDTO(
                    data_json = '', 
                    context = '', ),
                visual = visier.sdk.api.data_out.models.vee_visual_dto.VeeVisualDTO(
                    image = '', 
                    title = '', 
                    context = '', ),
                reworded_question = ''
            )
        else:
            return VeeResponseDTO(
        )
        """

    def testVeeResponseDTO(self):
        """Test VeeResponseDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
