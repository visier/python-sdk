# coding: utf-8

"""
    API Reference

    Detailed API reference documentation for Visier APIs. Includes all endpoints, headers, path parameters, query parameters, request body schema, response schema, JSON request samples, and JSON response samples.

    The version of the OpenAPI document: 22222222.99201.1892
    Contact: alpine@visier.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from visier_platform_sdk.models.servicing_servicing_capability_proto_enum_access_lookup_dto import ServicingServicingCapabilityProtoEnumAccessLookupDTO

class TestServicingServicingCapabilityProtoEnumAccessLookupDTO(unittest.TestCase):
    """ServicingServicingCapabilityProtoEnumAccessLookupDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ServicingServicingCapabilityProtoEnumAccessLookupDTO:
        """Test ServicingServicingCapabilityProtoEnumAccessLookupDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ServicingServicingCapabilityProtoEnumAccessLookupDTO`
        """
        model = ServicingServicingCapabilityProtoEnumAccessLookupDTO()
        if include_optional:
            return ServicingServicingCapabilityProtoEnumAccessLookupDTO(
                capability_groups = [
                    visier_platform_sdk.models.servicing/capability_group_dto.servicing.CapabilityGroupDTO(
                        group = 'unknown', 
                        access_level = 'NoAccess', 
                        view_level = 'Simple', 
                        api_access_level = 'NoAccess', 
                        api_view_level = 'Simple', )
                    ]
            )
        else:
            return ServicingServicingCapabilityProtoEnumAccessLookupDTO(
        )
        """

    def testServicingServicingCapabilityProtoEnumAccessLookupDTO(self):
        """Test ServicingServicingCapabilityProtoEnumAccessLookupDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
