# coding: utf-8

"""
    API Reference

    Detailed API reference documentation for Visier APIs. Includes all endpoints, headers, path parameters, query parameters, request body schema, response schema, JSON request samples, and JSON response samples.

    The version of the OpenAPI document: 22222222.99201.1910
    Contact: alpine@visier.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from visier_platform_sdk.models.servicing_accessible_tenant_profile_assignment_response_dto import ServicingAccessibleTenantProfileAssignmentResponseDTO

class TestServicingAccessibleTenantProfileAssignmentResponseDTO(unittest.TestCase):
    """ServicingAccessibleTenantProfileAssignmentResponseDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ServicingAccessibleTenantProfileAssignmentResponseDTO:
        """Test ServicingAccessibleTenantProfileAssignmentResponseDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ServicingAccessibleTenantProfileAssignmentResponseDTO`
        """
        model = ServicingAccessibleTenantProfileAssignmentResponseDTO()
        if include_optional:
            return ServicingAccessibleTenantProfileAssignmentResponseDTO(
                errors = True,
                bad_tenant_codes = [
                    visier_platform_sdk.models.servicing/tenant_code_error_dto.servicing.TenantCodeErrorDTO(
                        tenant_code = '', 
                        for_all_children = True, 
                        error = None, )
                    ],
                bad_user_ids = [
                    visier_platform_sdk.models.servicing/user_id_error_dto.servicing.UserIdErrorDTO(
                        user_id = '', 
                        error = None, )
                    ],
                failed_assignments = [
                    visier_platform_sdk.models.servicing/failed_accessible_tenant_profile_assignment_dto.servicing.FailedAccessibleTenantProfileAssignmentDTO(
                        user_id = '', 
                        tenant_code = '', 
                        for_all_children = True, 
                        error = None, )
                    ],
                successful_assignments = [
                    visier_platform_sdk.models.servicing/successful_accessible_tenant_profile_assignment_dto.servicing.SuccessfulAccessibleTenantProfileAssignmentDTO(
                        user_id = '', 
                        tenant_code = '', 
                        for_all_children = True, )
                    ]
            )
        else:
            return ServicingAccessibleTenantProfileAssignmentResponseDTO(
        )
        """

    def testServicingAccessibleTenantProfileAssignmentResponseDTO(self):
        """Test ServicingAccessibleTenantProfileAssignmentResponseDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
