# coding: utf-8

"""
    API Reference

    Detailed API reference documentation for Visier APIs. Includes all endpoints, headers, path parameters, query parameters, request body schema, response schema, JSON request samples, and JSON response samples.

    The version of the OpenAPI document: 22222222.99201.1910
    Contact: alpine@visier.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from visier_platform_sdk.api.tenants_v1_api import TenantsV1Api


class TestTenantsV1Api(unittest.TestCase):
    """TenantsV1Api unit test stubs"""

    def setUp(self) -> None:
        self.api = TenantsV1Api()

    def tearDown(self) -> None:
        pass

    def test_add_tenant(self) -> None:
        """Test case for add_tenant

        Add an analytic tenant
        """
        pass

    def test_add_tenants(self) -> None:
        """Test case for add_tenants

        Add analytic tenants
        """
        pass

    def test_delete_tenant(self) -> None:
        """Test case for delete_tenant

        Deprovision an analytic tenant
        """
        pass

    def test_disable_tenant(self) -> None:
        """Test case for disable_tenant

        Disable an analytic tenant
        """
        pass

    def test_enable_tenant(self) -> None:
        """Test case for enable_tenant

        Enable an analytic tenant
        """
        pass

    def test_get_tenant(self) -> None:
        """Test case for get_tenant

        Retrieve an analytic tenant's details
        """
        pass

    def test_get_tenants(self) -> None:
        """Test case for get_tenants

        Retrieve a list of all analytic tenants
        """
        pass

    def test_update_tenant(self) -> None:
        """Test case for update_tenant

        Update an analytic tenant
        """
        pass

    def test_validate_tenant(self) -> None:
        """Test case for validate_tenant

        Validate an analytic tenant's metric values
        """
        pass

    def test_validate_tenants(self) -> None:
        """Test case for validate_tenants

        Validate metric values for all analytic tenants
        """
        pass


if __name__ == '__main__':
    unittest.main()
