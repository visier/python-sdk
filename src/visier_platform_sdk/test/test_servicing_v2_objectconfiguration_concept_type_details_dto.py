# coding: utf-8

"""
    API Reference

    Detailed API reference documentation for Visier APIs. Includes all endpoints, headers, path parameters, query parameters, request body schema, response schema, JSON request samples, and JSON response samples.

    The version of the OpenAPI document: 22222222.99201.1914
    Contact: alpine@visier.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from visier_platform_sdk.models.servicing_v2_objectconfiguration_concept_type_details_dto import ServicingV2ObjectconfigurationConceptTypeDetailsDTO

class TestServicingV2ObjectconfigurationConceptTypeDetailsDTO(unittest.TestCase):
    """ServicingV2ObjectconfigurationConceptTypeDetailsDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ServicingV2ObjectconfigurationConceptTypeDetailsDTO:
        """Test ServicingV2ObjectconfigurationConceptTypeDetailsDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ServicingV2ObjectconfigurationConceptTypeDetailsDTO`
        """
        model = ServicingV2ObjectconfigurationConceptTypeDetailsDTO()
        if include_optional:
            return ServicingV2ObjectconfigurationConceptTypeDetailsDTO(
                process = visier_platform_sdk.models.servicing/v2/objectconfiguration/process_concept_definition_dto.servicing.v2.objectconfiguration.ProcessConceptDefinitionDTO(
                    analytic_object_name = '', 
                    status_dimension_object_name = '', 
                    participation_concept_uuid = '', 
                    on_hold_concept_uuid = '', 
                    stage_list = None, 
                    outcome_list = None, 
                    metric_list = None, 
                    property_list = None, 
                    tag_list = None, 
                    visible_in_analytics = True, 
                    include_with_vee = True, )
            )
        else:
            return ServicingV2ObjectconfigurationConceptTypeDetailsDTO(
        )
        """

    def testServicingV2ObjectconfigurationConceptTypeDetailsDTO(self):
        """Test ServicingV2ObjectconfigurationConceptTypeDetailsDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
