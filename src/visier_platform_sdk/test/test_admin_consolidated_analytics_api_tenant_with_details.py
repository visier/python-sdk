# coding: utf-8

"""
    API Reference

    Detailed API reference documentation for Visier APIs. Includes all endpoints, headers, path parameters, query parameters, request body schema, response schema, JSON request samples, and JSON response samples.

    The version of the OpenAPI document: 22222222.99201.1910
    Contact: alpine@visier.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from visier_platform_sdk.models.admin_consolidated_analytics_api_tenant_with_details import AdminConsolidatedAnalyticsAPITenantWithDetails

class TestAdminConsolidatedAnalyticsAPITenantWithDetails(unittest.TestCase):
    """AdminConsolidatedAnalyticsAPITenantWithDetails unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AdminConsolidatedAnalyticsAPITenantWithDetails:
        """Test AdminConsolidatedAnalyticsAPITenantWithDetails
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AdminConsolidatedAnalyticsAPITenantWithDetails`
        """
        model = AdminConsolidatedAnalyticsAPITenantWithDetails()
        if include_optional:
            return AdminConsolidatedAnalyticsAPITenantWithDetails(
                tenant_code = '',
                source_tenants_list = [
                    ''
                    ],
                excluded_sources_list = [
                    ''
                    ]
            )
        else:
            return AdminConsolidatedAnalyticsAPITenantWithDetails(
        )
        """

    def testAdminConsolidatedAnalyticsAPITenantWithDetails(self):
        """Test AdminConsolidatedAnalyticsAPITenantWithDetails"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
