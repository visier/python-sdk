# coding: utf-8

"""
    Visier Data In APIs

    Visier APIs for sending data to Visier and running data load jobs.

    The version of the OpenAPI document: 22222222.99201.1429
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from visier.sdk.api.data_in.models.exclude_data_uploads_request import ExcludeDataUploadsRequest

class TestExcludeDataUploadsRequest(unittest.TestCase):
    """ExcludeDataUploadsRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ExcludeDataUploadsRequest:
        """Test ExcludeDataUploadsRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ExcludeDataUploadsRequest`
        """
        model = ExcludeDataUploadsRequest()
        if include_optional:
            return ExcludeDataUploadsRequest(
                model = visier.sdk.api.data_in.models.upload_to_exclude_model.UploadToExcludeModel(
                    uploads = [
                        visier.sdk.api.data_in.models.upload_to_exclude.UploadToExclude(
                            exclude_all = True, 
                            max_upload_time = '', 
                            min_upload_time = '', 
                            sources = [
                                ''
                                ], 
                            tenant_code = '', 
                            upload_times = [
                                ''
                                ], )
                        ], )
            )
        else:
            return ExcludeDataUploadsRequest(
        )
        """

    def testExcludeDataUploadsRequest(self):
        """Test ExcludeDataUploadsRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
