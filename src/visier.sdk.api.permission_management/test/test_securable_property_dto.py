# coding: utf-8

"""
    Visier Permission Management APIs

    Visier APIs for managing permissions within an organization

    The version of the OpenAPI document: 22222222.99201.1411
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from visier.sdk.api.permission_management.models.securable_property_dto import SecurablePropertyDTO

class TestSecurablePropertyDTO(unittest.TestCase):
    """SecurablePropertyDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SecurablePropertyDTO:
        """Test SecurablePropertyDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SecurablePropertyDTO`
        """
        model = SecurablePropertyDTO()
        if include_optional:
            return SecurablePropertyDTO(
                analytic_object_id = '',
                display_name = '',
                is_primary_key = True,
                property_id = '',
                reference_symbol_name = ''
            )
        else:
            return SecurablePropertyDTO(
        )
        """

    def testSecurablePropertyDTO(self):
        """Test SecurablePropertyDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
