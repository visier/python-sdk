# coding: utf-8

"""
    Visier Permission Management APIs

    Visier APIs for managing permissions within an organization

    The version of the OpenAPI document: 22222222.99201.1411
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from visier.sdk.api.permission_management.models.data_security_profile_dto import DataSecurityProfileDTO

class TestDataSecurityProfileDTO(unittest.TestCase):
    """DataSecurityProfileDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DataSecurityProfileDTO:
        """Test DataSecurityProfileDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DataSecurityProfileDTO`
        """
        model = DataSecurityProfileDTO()
        if include_optional:
            return DataSecurityProfileDTO(
                all_data_point_access = True,
                analytic_object_id = '',
                inherited_access_configs = [
                    visier.sdk.api.permission_management.models.inherited_access_config_dto.InheritedAccessConfigDTO(
                        analytic_object_id = '', 
                        member_filter_configs = [
                            visier.sdk.api.permission_management.models.member_filter_config_dto.MemberFilterConfigDTO(
                                dimension_filters = [
                                    visier.sdk.api.permission_management.models.dimension_filter_dto.DimensionFilterDTO(
                                        dynamic_dimension_filter = visier.sdk.api.permission_management.models.dynamic_dimension_filter_dto.DynamicDimensionFilterDTO(
                                            dimension_id = '', 
                                            dimension_status = 'Unset', 
                                            dynamic_property_mappings = [
                                                visier.sdk.api.permission_management.models.dynamic_property_mapping_dto.DynamicPropertyMappingDTO(
                                                    hierarchy_property_id = '', 
                                                    hierarchy_property_status = 'Unset', 
                                                    user_property = null, )
                                                ], 
                                            subject_reference_path = [
                                                ''
                                                ], ), 
                                        static_dimension_filter = visier.sdk.api.permission_management.models.static_dimension_filter_dto.StaticDimensionFilterDTO(
                                            dimension_id = '', 
                                            dimension_status = 'Unset', 
                                            member_selections = [
                                                visier.sdk.api.permission_management.models.member_selection_dto.MemberSelectionDTO(
                                                    dimension_member_status = 'Unset', 
                                                    excluded = True, 
                                                    name_path = [
                                                        ''
                                                        ], )
                                                ], ), )
                                    ], )
                            ], 
                        remove_access = True, )
                    ],
                inherited_reference_member_filter_config = visier.sdk.api.permission_management.models.inherited_reference_member_filter_config_dto.InheritedReferenceMemberFilterConfigDTO(
                    target_analytic_object_id = '', ),
                member_filter_configs = [
                    visier.sdk.api.permission_management.models.member_filter_config_dto.MemberFilterConfigDTO(
                        dimension_filters = [
                            visier.sdk.api.permission_management.models.dimension_filter_dto.DimensionFilterDTO(
                                dynamic_dimension_filter = visier.sdk.api.permission_management.models.dynamic_dimension_filter_dto.DynamicDimensionFilterDTO(
                                    dimension_id = '', 
                                    dimension_status = 'Unset', 
                                    dynamic_property_mappings = [
                                        visier.sdk.api.permission_management.models.dynamic_property_mapping_dto.DynamicPropertyMappingDTO(
                                            hierarchy_property_id = '', 
                                            hierarchy_property_status = 'Unset', 
                                            user_property = null, )
                                        ], 
                                    subject_reference_path = [
                                        ''
                                        ], ), 
                                static_dimension_filter = visier.sdk.api.permission_management.models.static_dimension_filter_dto.StaticDimensionFilterDTO(
                                    dimension_id = '', 
                                    dimension_status = 'Unset', 
                                    member_selections = [
                                        visier.sdk.api.permission_management.models.member_selection_dto.MemberSelectionDTO(
                                            dimension_member_status = 'Unset', 
                                            excluded = True, 
                                            name_path = [
                                                ''
                                                ], )
                                        ], ), )
                            ], )
                    ],
                property_set_config = visier.sdk.api.permission_management.models.property_set_config_dto.PropertySetConfigDTO(
                    property_access_configs = [
                        visier.sdk.api.permission_management.models.property_access_config_dto.PropertyAccessConfigDTO(
                            access_level = 'None', 
                            analytic_object_id = '', 
                            analytic_object_reference_paths = [
                                ''
                                ], 
                            property_id = '', 
                            property_status = 'Unset', )
                        ], 
                    shareable_data_access_set = null, )
            )
        else:
            return DataSecurityProfileDTO(
        )
        """

    def testDataSecurityProfileDTO(self):
        """Test DataSecurityProfileDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
