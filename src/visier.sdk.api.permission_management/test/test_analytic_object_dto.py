# coding: utf-8

"""
    Visier Permission Management APIs

    Visier APIs for managing permissions within an organization

    The version of the OpenAPI document: 22222222.99201.1411
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from visier.sdk.api.permission_management.models.analytic_object_dto import AnalyticObjectDTO

class TestAnalyticObjectDTO(unittest.TestCase):
    """AnalyticObjectDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AnalyticObjectDTO:
        """Test AnalyticObjectDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AnalyticObjectDTO`
        """
        model = AnalyticObjectDTO()
        if include_optional:
            return AnalyticObjectDTO(
                analytic_object_id = '',
                display_name = '',
                object_type = 'Event',
                related_objects = [
                    visier.sdk.api.permission_management.models.related_analytic_object_dto.RelatedAnalyticObjectDTO(
                        analytic_object_id = '', 
                        display_name = '', )
                    ],
                securable_dimensions = [
                    visier.sdk.api.permission_management.models.securable_dimension_dto.SecurableDimensionDTO(
                        analytic_object_ids = [
                            ''
                            ], 
                        dimension_id = '', 
                        display_name = '', 
                        hierarchy_properties = [
                            visier.sdk.api.permission_management.models.hierarchy_property_dto.HierarchyPropertyDTO(
                                display_name = '', 
                                hierarchy_property_id = '', )
                            ], )
                    ],
                securable_properties = [
                    visier.sdk.api.permission_management.models.securable_property_dto.SecurablePropertyDTO(
                        analytic_object_id = '', 
                        display_name = '', 
                        is_primary_key = True, 
                        property_id = '', 
                        reference_symbol_name = '', )
                    ]
            )
        else:
            return AnalyticObjectDTO(
        )
        """

    def testAnalyticObjectDTO(self):
        """Test AnalyticObjectDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
