# coding: utf-8

"""
    Visier User Management APIs

    Visier APIs for managing users within an organization

    The version of the OpenAPI document: 22222222.99201.1411
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from visier.sdk.api.user_management.models.tenant_assignments_dto import TenantAssignmentsDTO

class TestTenantAssignmentsDTO(unittest.TestCase):
    """TenantAssignmentsDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TenantAssignmentsDTO:
        """Test TenantAssignmentsDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TenantAssignmentsDTO`
        """
        model = TenantAssignmentsDTO()
        if include_optional:
            return TenantAssignmentsDTO(
                assignments = [
                    visier.sdk.api.user_management.models.user_security_assignments_dto.UserSecurityAssignmentsDTO(
                        id = '', 
                        name = '', 
                        users = [
                            visier.sdk.api.user_management.models.simple_user_dto.SimpleUserDTO(
                                user_id = '', 
                                username = '', )
                            ], )
                    ],
                message = '',
                status = 'Unknown',
                tenant_code = ''
            )
        else:
            return TenantAssignmentsDTO(
        )
        """

    def testTenantAssignmentsDTO(self):
        """Test TenantAssignmentsDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
