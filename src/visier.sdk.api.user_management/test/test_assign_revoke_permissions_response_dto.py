# coding: utf-8

"""
    Visier User Management APIs

    Visier APIs for managing users within an organization

    The version of the OpenAPI document: 22222222.99201.1411
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from visier.sdk.api.user_management.models.assign_revoke_permissions_response_dto import AssignRevokePermissionsResponseDTO

class TestAssignRevokePermissionsResponseDTO(unittest.TestCase):
    """AssignRevokePermissionsResponseDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AssignRevokePermissionsResponseDTO:
        """Test AssignRevokePermissionsResponseDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AssignRevokePermissionsResponseDTO`
        """
        model = AssignRevokePermissionsResponseDTO()
        if include_optional:
            return AssignRevokePermissionsResponseDTO(
                tenants = [
                    visier.sdk.api.user_management.models.assign_revoke_permission_by_tenant_dto.AssignRevokePermissionByTenantDTO(
                        message = '', 
                        permissions = [
                            visier.sdk.api.user_management.models.assign_revoke_permission_by_permission_dto.AssignRevokePermissionByPermissionDTO(
                                permission = visier.sdk.api.user_management.models.permission_assigned_for_local_tenant_dto.PermissionAssignedForLocalTenantDTO(
                                    description = '', 
                                    display_name = '', 
                                    permission_id = '', ), 
                                users = [
                                    visier.sdk.api.user_management.models.assign_revoke_permission_by_user_dto.AssignRevokePermissionByUserDTO(
                                        message = '', 
                                        user_id = '', 
                                        username = '', )
                                    ], )
                            ], 
                        status = 'Unknown', 
                        tenant_code = '', )
                    ]
            )
        else:
            return AssignRevokePermissionsResponseDTO(
        )
        """

    def testAssignRevokePermissionsResponseDTO(self):
        """Test AssignRevokePermissionsResponseDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
