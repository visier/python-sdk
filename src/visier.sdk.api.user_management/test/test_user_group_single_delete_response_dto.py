# coding: utf-8

"""
    Visier User Management APIs

    Visier APIs for managing users within an organization

    The version of the OpenAPI document: 22222222.99201.1411
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from visier.sdk.api.user_management.models.user_group_single_delete_response_dto import UserGroupSingleDeleteResponseDTO

class TestUserGroupSingleDeleteResponseDTO(unittest.TestCase):
    """UserGroupSingleDeleteResponseDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UserGroupSingleDeleteResponseDTO:
        """Test UserGroupSingleDeleteResponseDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UserGroupSingleDeleteResponseDTO`
        """
        model = UserGroupSingleDeleteResponseDTO()
        if include_optional:
            return UserGroupSingleDeleteResponseDTO(
                failure = visier.sdk.api.user_management.models.user_group_delete_failure_dto.UserGroupDeleteFailureDTO(
                    message = '', 
                    project_id = '', 
                    rci = '', 
                    tenant_code = '', 
                    user_group_id = '', ),
                success = visier.sdk.api.user_management.models.user_group_delete_success_dto.UserGroupDeleteSuccessDTO(
                    project_id = '', 
                    tenant_code = '', 
                    user_group_id = '', )
            )
        else:
            return UserGroupSingleDeleteResponseDTO(
        )
        """

    def testUserGroupSingleDeleteResponseDTO(self):
        """Test UserGroupSingleDeleteResponseDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
