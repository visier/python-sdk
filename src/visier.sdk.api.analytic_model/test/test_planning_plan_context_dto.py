# coding: utf-8

"""
    Visier Analytic Model APIs

    Visier APIs for retrieving and configuring your analytic model in Visier.

    The version of the OpenAPI document: 22222222.99201.1429
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from visier.sdk.api.analytic_model.models.planning_plan_context_dto import PlanningPlanContextDTO

class TestPlanningPlanContextDTO(unittest.TestCase):
    """PlanningPlanContextDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PlanningPlanContextDTO:
        """Test PlanningPlanContextDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PlanningPlanContextDTO`
        """
        model = PlanningPlanContextDTO()
        if include_optional:
            return PlanningPlanContextDTO(
                concept_filter_context = visier.sdk.api.analytic_model.models.planning_concept_filter_context_dto.PlanningConceptFilterContextDTO(
                    name = '', ),
                hierarchy_filter_context = visier.sdk.api.analytic_model.models.planning_hierarchy_filter_context_dto.PlanningHierarchyFilterContextDTO(
                    excluded_members = [
                        ''
                        ], 
                    hierarchy_name = '', 
                    included_members = [
                        ''
                        ], )
            )
        else:
            return PlanningPlanContextDTO(
        )
        """

    def testPlanningPlanContextDTO(self):
        """Test PlanningPlanContextDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
